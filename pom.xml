<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.igrupobbva.dyd.sl.nauthilus</groupId>
    <artifactId>nauthilus-parent-pom</artifactId>
    <version>1.2.05-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Parent pom for Mantis-Marina products</description>
    <properties>
        <findbugs.version>3.0.5</findbugs.version>
        <checkstyle.version>3.0.0</checkstyle.version>
        <cobertura.version>2.7</cobertura.version>
        <enforcer.version>3.0.0-M2</enforcer.version>
        <pmd-plugin.version>3.10.0</pmd-plugin.version>
        <versions-plugin.version>2.5</versions-plugin.version>
        <javadoc.version>3.0.1</javadoc.version>
        <formatter-plugin.version>2.7.3</formatter-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <jdk-version>1.8</jdk-version>
        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
        <!-- downgraded failsafe version because of https://github.com/spring-projects/spring-boot/issues/6254 -->
        <maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
        <maven-compiler.version>3.7.0</maven-compiler.version>
        <maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
        <maven-source.version>3.0.1</maven-source.version>
        <maven-war.version>3.2.2</maven-war.version>
        <spring-boot-maven-plugin.version>2.0.3.RELEASE</spring-boot-maven-plugin.version>
        <!-- cobertura -->
        <cobertura-branch.rate>65%</cobertura-branch.rate>
        <cobertura-line.rate>80%</cobertura-line.rate>
        <!-- PMD -->
        <nauthilus-qa.version>[1.1.5.RELEASE,)</nauthilus-qa.version>
        <!-- owasp -->
        <owasp.version>3.1.2</owasp.version>
        <!-- jmeter -->
        <jmeter-plugin.version>2.7.0</jmeter-plugin.version>
        <waitfor-plugin.version>1.1</waitfor-plugin.version>
        <docker-compose-plugin.version>1.0.3</docker-compose-plugin.version>
        <jacoco.version>0.8.1</jacoco.version>
        <jmeter-report.path>path</jmeter-report.path>
        <!-- switch -->
        <findbugs.skip>false</findbugs.skip>
        <pmd.skip>false</pmd.skip>
        <cobertura.skip>false</cobertura.skip>
        <enforce.skip>false</enforce.skip>
        <source.skip>false</source.skip>
        <checkstyle.skip>false</checkstyle.skip>
        <javadoc.skip>false</javadoc.skip>
        <formatter.skip>false</formatter.skip>
        <unittests.skip>false</unittests.skip>
        <!-- deps without vulnerabilities -->
        <spring-boot.version>1.5.14.RELEASE</spring-boot.version>
        <spring.cloud.version>Edgware.SR3</spring.cloud.version>
        <excludes.spring-data-mongo.version>1.10.9.RELEASE</excludes.spring-data-mongo.version>
        <commons.collections.version>3.2.2</commons.collections.version>
        <commons-fileupload.version>1.3.3</commons-fileupload.version>
    </properties>
    <modules>
        <module>jmeter-assembly-descriptor</module>
    </modules>
    <dependencyManagement>
        <dependencies>
            <!-- external deps -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons.collections.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.igrupobbva.dyd.sl.nauthilus</groupId>
            <artifactId>nauthilus-qa-rules</artifactId>
            <version>${nauthilus-qa.version}</version>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${enforcer.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war.version}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>${cobertura.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${pmd-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>
                    <configuration>
                        <remoteRepositories>
                            https://globaldevtools.bbva.com/artifactory/nauthilus-releases,
                            https://globaldevtools.bbva.com/artifactory/nauthilus-snapshots,
                            http://central.maven.org/maven2,
                            https://build.shibboleth.net/nexus/content/repositories/snapshots,
                            https://build.shibboleth.net/nexus/content/groups/public,
                            https://repo.spring.io/libs-release
                        </remoteRepositories>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadoc.version}</version>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code.formatter</groupId>
                    <artifactId>formatter-maven-plugin</artifactId>
                    <version>${formatter-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--<plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reformatcode</id>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
                <configuration>
                    <skip>${formatter.skip}</skip>
                    <encoding>UTF-8</encoding>
                    <configFile>nauthilusStyle.xml</configFile>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.igrupobbva.dyd.sl.nauthilus</groupId>
                        <artifactId>nauthilus-qa-rules</artifactId>
                        <version>${nauthilus-qa.version}</version>
                    </dependency>
                </dependencies>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>${javadoc.skip}</skip>
                    <author>true</author>
                    <version>true</version>
                    <use>true</use>
                    <linksource>true</linksource>
                    <windowtitle>Nauthilus ${project.version}</windowtitle>
                    <doctitle>Nauthilus ${project.version}</doctitle>
                    <overview>${basedir}/src/main/javadoc/overview.html</overview>
                    <additionalparam>-Xdoclint:none</additionalparam>
                    <excludePackageNames>com.*generated*</excludePackageNames>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>com.igrupobbva.dyd.sl.nauthilus</groupId>
                        <artifactId>nauthilus-qa-rules</artifactId>
                        <version>${nauthilus-qa.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skip>${checkstyle.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>checkstyle.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <sourceDirectories>
                                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            </sourceDirectories>
                            <excludes>**/generated/**/*</excludes>
                            <excludes>net/shibboleth/**/*</excludes>
                            <consoleOutput>true</consoleOutput>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- IDE MUST be configured to write java files in UTF-8 encoding -->
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <target>${jdk-version}</target>
                    <source>${jdk-version}</source>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipSource>${source.skip}</skipSource>
                </configuration>
            </plugin>
            <plugin>
                <inherited>true</inherited>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven-3</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.skip}</skip>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.1.0</version>
                                </requireMavenVersion>
                                <requireReleaseDeps>
                                    <searchTransitive>true</searchTransitive>
                                    <onlyWhenRelease>true</onlyWhenRelease>
                                    <message>No snapshot allowed when doing release</message>
                                </requireReleaseDeps>
                                <banDuplicatePomDependencyVersions/>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>
                                            org.springframework.boot:spring-boot-dependencies:[0.0.0,${spring-boot.version}):pom:import
                                        </exclude>
                                        <exclude>
                                            org.springframework.cloud:spring-cloud-dependencies:[0.0.0,${spring.cloud.version}):pom:import
                                        </exclude>
                                        <exclude>
                                            commons-fileupload:commons-fileupload:[0.0.0,${commons-fileupload.version})
                                        </exclude>
                                        <exclude>
                                            commons-collections:commons-collections:[0.0.0,${commons.collections.version})
                                        </exclude>
                                        <exclude>
                                            org.springframework.data:spring-data-mongodb-parent:[0.0.0,${excludes.spring-data-mongo.version})
                                        </exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*App.java</exclude>
                    </excludes>
                    <skip>${unittests.skip}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <skip>${cobertura.skip}</skip>
                    <excludes>
                        <exclude>**/generated/**/*</exclude>
                        <exclude>**/model/**/*</exclude>
                        <exclude>**/dto/**/*</exclude>
                        <exclude>net/shibboleth/idp/**/*</exclude>
                        <exclude>org/opensaml/saml/**/*</exclude>
                        <exclude>*Configuration.*</exclude>
                        <exclude>*Exception.*</exclude>
                        <exclude>net/shibboleth/idp/**/*</exclude>
                        <exclude>org/opensaml/saml/**/*</exclude>
                        <exclude>*App.*</exclude>
                        <exclude>*Application.*</exclude>
                        <exclude>*DTO.*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/generated/**/*</exclude>
                                <exclude>**/model/**/*</exclude>
                                <exclude>**/dto/**/*</exclude>
                                <exclude>net/shibboleth/idp/**/*</exclude>
                                <exclude>org/opensaml/saml/**/*</exclude>
                                <exclude>*Configuration</exclude>
                                <exclude>*Exception</exclude>
                                <exclude>*net*shibboleth*idp*</exclude>
                                <exclude>org*opensaml*saml*</exclude>
                                <exclude>*App</exclude>
                                <exclude>*Application</exclude>
                                <exclude>*DTO</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report-integration</id>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/generated/**/*</exclude>
                                <exclude>**/model/**/*</exclude>
                                <exclude>**/dto/**/*</exclude>
                                <exclude>net/shibboleth/idp/**/*</exclude>
                                <exclude>org/opensaml/saml/**/*</exclude>
                                <exclude>**/*Configuration</exclude>
                                <exclude>*Exception</exclude>
                                <exclude>*net*shibboleth*idp*</exclude>
                                <exclude>org*opensaml*saml*</exclude>
                                <exclude>*App</exclude>
                                <exclude>*Application</exclude>
                                <exclude>*DTO</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge</id>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/nauthilus.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/nauthilus.exec</dataFile>
                            <haltOnFailure>true</haltOnFailure>
                            <skip>${cobertura.skip}</skip>
                            <rules>
                                <rule>
                                    <element>CLASS</element>
                                    <excludes>
                                        <exclude>**/generated/**/*</exclude>
                                        <exclude>**/model/**/*</exclude>
                                        <exclude>**/dto/**/*</exclude>
                                        <exclude>net/shibboleth/idp/**/*</exclude>
                                        <exclude>org/opensaml/saml/**/*</exclude>
                                        <exclude>*Configuration</exclude>
                                        <exclude>*Exception</exclude>
                                        <exclude>*net*shibboleth*idp*</exclude>
                                        <exclude>org*opensaml*saml*</exclude>
                                        <exclude>*App</exclude>
                                        <exclude>*Application</exclude>
                                        <exclude>*DTO</exclude>
                                    </excludes>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${cobertura-line.rate}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${cobertura-branch.rate}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <skip>${pmd.skip}</skip>
                    <rulesets>
                        <ruleset>ruleset.xml</ruleset>
                    </rulesets>
                    <printFailingErrors>true</printFailingErrors>
                    <linkXref>false</linkXref>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${jdk-version}</targetJdk>
                    <excludes>
                        <exclude>net/shibboleth/**/*.java</exclude>
                        <exclude>**/generated/*.java</exclude>
                    </excludes>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                            <goal>pmd</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.igrupobbva.dyd.sl.nauthilus</groupId>
                        <artifactId>nauthilus-qa-rules</artifactId>
                        <version>${nauthilus-qa.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs.version}</version>
                <configuration>
                    <excludeFilterFile>findbugs-exclusions.xml</excludeFilterFile>
                    <skip>${findbugs.skip}</skip>
                    <classFilesDirectory>${project.build.outputDirectory}</classFilesDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <effort>Max</effort>
                            <failOnError>true</failOnError>
                            <threshold>High</threshold>
                            <classFilesDirectory>${project.build.outputDirectory}</classFilesDirectory>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.igrupobbva.dyd.sl.nauthilus</groupId>
                        <artifactId>nauthilus-qa-rules</artifactId>
                        <version>${nauthilus-qa.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>
    <repositories>
        <repository>
            <id>spring-releases</id>
            <url>https://repo.spring.io/libs-release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>shib-release</id>
            <url>https://build.shibboleth.net/nexus/content/groups/public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>shib-snapshot</id>
            <url>https://build.shibboleth.net/nexus/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>central-maven</id>
            <name>central</name>
            <url>http://central.maven.org/maven2</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>nauthilus-global-maven</id>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <name>nauthilus-global-maven</name>
            <url>https://globaldevtools.bbva.com:443/artifactory-api/repository-nauthilus-global-maven</url>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>nauthilus-releases</id>
            <name>Nauthilus Releases</name>
            <url>https://globaldevtools.bbva.com/artifactory/nauthilus-releases</url>
        </repository>
        <snapshotRepository>
            <id>nauthilus-snapshots</id>
            <name>Nauthilus snapshots</name>
            <url>https://globaldevtools.bbva.com/artifactory/nauthilus-snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <profiles>
        <profile>
            <!-- plugin searching for well known vulnerabilities at source code -->
            <id>owasp</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${owasp.version}</version>
                        <configuration>
                            <skipProvidedScope>true</skipProvidedScope>
                            <skipRuntimeScope>true</skipRuntimeScope>
                            <failBuildOnCVSS>8</failBuildOnCVSS>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- plugin searching for well known vulnerabilities at source code -->
            <id>ossindex</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.ossindex</groupId>
                        <artifactId>ossindex-maven-plugin</artifactId>
                        <version>2.3.8</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>audit</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- plugin for running jmeter testing -->
            <id>jmeter</id>
            <properties>
                <findbugs.skip>true</findbugs.skip>
                <pmd.skip>true</pmd.skip>
                <cobertura.skip>true</cobertura.skip>
                <enforce.skip>true</enforce.skip>
                <source.skip>true</source.skip>
                <checkstyle.skip>true</checkstyle.skip>
                <javadoc.skip>true</javadoc.skip>
                <formatter.skip>true</formatter.skip>
                <unittests.skip>true</unittests.skip>
                <docker-compose.jmeter>expected-docker-compose-path</docker-compose.jmeter>
                <waitfor.uritoping>expected-health-endpoint-to-wait-for-before-test</waitfor.uritoping>
                <waitfor.method>GET</waitfor.method>
                <waitfor.expectedStatus>200</waitfor.expectedStatus>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <version>${docker-compose-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>up</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>up</goal>
                                </goals>
                                <configuration>
                                    <composeFile>${docker-compose.jmeter}</composeFile>
                                    <detachedMode>true</detachedMode>
                                </configuration>
                            </execution>
                            <execution>
                                <id>down</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>down</goal>
                                </goals>
                                <configuration>
                                    <composeFile>${docker-compose.jmeter}</composeFile>
                                    <removeVolumes>true</removeVolumes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.simplaex</groupId>
                        <artifactId>waitfor-maven-plugin</artifactId>
                        <version>${waitfor-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>wait-for-environment-to-be-up</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>waitfor</goal>
                                </goals>
                                <configuration>
                                    <checks>
                                        <check>
                                            <url>${waitfor.uritoping}</url>
                                            <method>${waitfor.method}</method>
                                            <statusCode>${waitfor.expectedStatus}</statusCode>
                                        </check>
                                    </checks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.lazerycode.jmeter</groupId>
                        <artifactId>jmeter-maven-plugin</artifactId>
                        <version>${jmeter-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>jmeter-tests</id>
                                <goals>
                                    <goal>jmeter</goal>
                                </goals>
                                <phase>integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.0.0</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.igrupobbva.dyd.sl.nauthilus</groupId>
                                <artifactId>jmeter-assembly-descriptor</artifactId>
                                <version>1.2.05-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jmeter</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>distribution</id>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>


