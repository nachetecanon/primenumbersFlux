subprojects {
    /*apply plugin: 'groovy'*/
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    apply plugin: 'jacoco'

    group 'com.valverde.nacho'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url "http://central.maven.org/maven2" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    sourceCompatibility = 1.10
    targetCompatibility = 1.10

    checkstyleMain {
        version = "8.11"
        ignoreFailures = false
        configFile = rootProject.file("config/checkstyle/checkstyle.xml")
        source = ['/src/main']
    }
// TODO a ver si se puede generar informe de todo cuando falla
    // https://github.com/Netflix/spectator/blob/master/build.gradle
    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    findbugsMain {
        excludeFilter = file("$projectDir/findbugs/findbugs-exclusions.xml")
        includeFilter = file("$projectDir/findbugs/findbugs-style.xml")
    }

    jacoco {
        toolVersion = "0.8.1"
    }

    jacocoTestCoverageVerification {
        violationRules {
            failOnViolation = true
            rule {
                enabled = true
                element = 'CLASS'
                excludes = ['*Exception', '*Application']

                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.95
                }
                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.70
                }
            }
        }
    }

    jacocoTestReport {

        reports {
            xml.enabled = false
            html.enabled = true
        }

    }
    jacocoTestCoverageVerification.dependsOn(jacocoTestReport)
    check.dependsOn(checkstyleMain, pmdMain, findbugsMain, jacocoTestCoverageVerification)
}









configure(subprojects.findAll()) {
    test {
        onlyIf {
            !(project.name =~ /.*-test.*/)
        }
    }
}