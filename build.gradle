/**
 * https://docs.spring.io/platform/docs/current/reference/html/getting-started-using-spring-io-platform.html
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }


}
subprojects {


    apply plugin: 'java'
    apply plugin: 'pmd'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'


    group 'com.valverde.nacho'

    ext { springBootVersion = '2.0.4.RELEASE' }

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url "http://central.maven.org/maven2" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }
    dependencyManagement {
        imports {
            mavenBom 'io.spring.platform:platform-bom:Cairo-SR3'
        }
    }
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    version = '1.0'

    checkstyleMain {
        version = "8.11"
        ignoreFailures = false
        configFile = rootProject.file("config/java/checkstyle/checkstyle.xml")
    }
    checkstyleTest {
        version = "8.11"
        ignoreFailures = false
        configFile = rootProject.file("config/java/checkstyle/checkstyle.xml")
    }

    jacoco {
        toolVersion = "0.8.1"
    }

    jacocoTestCoverageVerification {
        dependsOn(jacocoTestReport)
        violationRules {
            failOnViolation = true
            rule {
                enabled = true
                element = 'CLASS'
                excludes = ['*Exception', '*Application']

                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.95
                }
                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.70
                }
            }
        }
    }
    jacocoTestReport {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
    pmdMain {
        version = '4.10'
        ignoreFailures = false
        ruleSetConfig = rootProject.resources.text.fromFile("config/java/pmd/ruleset.xml")
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    check.dependsOn(checkstyleMain, pmdMain, jacocoTestCoverageVerification)
    configure(subprojects.findAll()) {
        test {
            onlyIf {
                !(project.name =~ /.*-test.*/)
            }
        }
    }


}


